--- a/src/core/ipv4/dhcp.c	2021-07-24 17:06:23.000000000 +0200
+++ b/src/core/ipv4/dhcp.c	2021-07-24 16:22:53.000000000 +0200
@@ -218,6 +218,9 @@
 #if LWIP_NETIF_HOSTNAME
 static u16_t dhcp_option_hostname(u16_t options_out_len, u8_t *options, struct netif *netif);
 #endif /* LWIP_NETIF_HOSTNAME */
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+static u16_t dhcp_option_client_id(struct netif *netif, struct dhcp_msg *msg_out, u16_t options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
 /* always add the DHCP options trailer to end and pad */
 static void dhcp_option_trailer(u16_t options_out_len, u8_t *options, struct pbuf *p_out);
 
@@ -390,6 +393,10 @@
     options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_REQUESTED_IP, 4);
     options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(&dhcp->offered_ip_addr)));
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
     options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_SERVER_ID, 4);
     options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(ip_2_ip4(&dhcp->server_ip_addr))));
 
@@ -955,6 +962,10 @@
     options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_REQUESTED_IP, 4);
     options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(&dhcp->offered_ip_addr)));
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
     LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_BACKING_OFF, msg_out, DHCP_DECLINE, &options_out_len);
     dhcp_option_trailer(options_out_len, msg_out->options, p_out);
 
@@ -1006,6 +1017,16 @@
     options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
     options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
 
+#if ESP_DHCP
+#if LWIP_NETIF_HOSTNAME
+    options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
+#endif /* LWIP NETIF HOSTNAME */
+
+#if !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* !ESP_DHCP_DISABLE_CLIENT_ID */
+#endif/* ESP_DHCP */
+
     options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
     for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
       options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
@@ -1182,6 +1203,10 @@
     options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
 #endif /* LWIP_NETIF_HOSTNAME */
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
     LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_RENEWING, msg_out, DHCP_REQUEST, &options_out_len);
     dhcp_option_trailer(options_out_len, msg_out->options, p_out);
 
@@ -1237,6 +1262,10 @@
     options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
 #endif /* LWIP_NETIF_HOSTNAME */
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
     LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_REBINDING, msg_out, DHCP_DISCOVER, &options_out_len);
     dhcp_option_trailer(options_out_len, msg_out->options, p_out);
 
@@ -1294,6 +1323,10 @@
     options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
 #endif /* LWIP_NETIF_HOSTNAME */
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+    options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
     LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_REBOOTING, msg_out, DHCP_REQUEST, &options_out_len);
     dhcp_option_trailer(options_out_len, msg_out->options, p_out);
 
@@ -1361,6 +1394,10 @@
       options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_SERVER_ID, 4);
       options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(ip_2_ip4(&server_ip_addr))));
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+      options_out_len = dhcp_option_client_id(netif, msg_out, options_out_len);
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
       LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, dhcp->state, msg_out, DHCP_RELEASE, &options_out_len);
       dhcp_option_trailer(options_out_len, msg_out->options, p_out);
 
@@ -1499,6 +1536,21 @@
 }
 #endif /* LWIP_NETIF_HOSTNAME */
 
+#if ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID
+static u16_t
+dhcp_option_client_id(struct netif *netif, struct dhcp_msg *msg_out, u16_t options_out_len)
+{
+  size_t i;
+  options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_CLIENT_ID, DHCP_OPTION_CLIENT_ID_MAC_LEN);
+  options_out_len = dhcp_option_byte(options_out_len, msg_out->options, DHCP_OPTION_CLIENT_ID_MAC);
+  for (i = 0; i < netif->hwaddr_len; i++) {
+    options_out_len = dhcp_option_byte(options_out_len, msg_out->options, netif->hwaddr[i]);
+  }
+  return options_out_len;
+}
+#endif /* ESP_DHCP && !ESP_DHCP_DISABLE_CLIENT_ID */
+
+
 /**
  * Extract the DHCP message and the DHCP options.
  *
--- a/src/include/lwip/prot/dhcp.h	2021-07-24 17:24:44.000000000 +0200
+++ b/src/include/lwip/prot/dhcp.h	2021-07-24 16:55:53.000000000 +0200
@@ -170,6 +170,14 @@
 #define DHCP_OVERLOAD_SNAME         2
 #define DHCP_OVERLOAD_SNAME_FILE    3
 
+/* DHCP OPTION 61 TYPE */
+#if ESP_DHCP
+#define DHCP_OPTION_CLIENT_ID_MAC   0x01
+#define DHCP_OPTION_CLIENT_ID_DUID  0x02
+#define DHCP_OPTION_CLIENT_ID_IAID  0xff
+
+#define DHCP_OPTION_CLIENT_ID_MAC_LEN   7
+#endif
 
 #ifdef __cplusplus
 }
